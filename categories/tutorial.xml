<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lab of Random (Posts about tutorial)</title><link>https://jiayiliu.github.com/</link><description></description><atom:link href="https://jiayiliu.github.com/categories/tutorial.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2019 &lt;a href="mailto:jiayi.uiuc@gmail.com"&gt;Jiayi (Jason) Liu&lt;/a&gt; </copyright><lastBuildDate>Sat, 14 Dec 2019 08:25:49 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>PocketFlow unofficial guide</title><link>https://jiayiliu.github.com/posts/pocketflow-intro/</link><dc:creator>Jiayi (Jason) Liu</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="PocketFlow-unofficial-guide"&gt;PocketFlow unofficial guide&lt;a class="anchor-link" href="https://jiayiliu.github.com/posts/pocketflow-intro/#PocketFlow-unofficial-guide"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/Tencent/PocketFlow/"&gt;PocketFlow&lt;/a&gt; is a model compression framework open-sourced by Tencent.  After a close look, I find it should be a fairly handy tool.  However, there are three caveats:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The [tutorial] is not very helpful if you want to build your own model;&lt;/li&gt;
&lt;li&gt;The repo is not actively maintained (sadly to see no support from Tencent);&lt;/li&gt;
&lt;li&gt;There are some problems with TF versions.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I am trying to address the above problems, and in the article, I am trying to provide a userful guidance to compress your own model.&lt;/p&gt;
&lt;h3 id=""&gt;&lt;a class="anchor-link" href="https://jiayiliu.github.com/posts/pocketflow-intro/"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;h3 id="Steps-to-build-a-training/compression-pipeline"&gt;Steps to build a training/compression pipeline&lt;a class="anchor-link" href="https://jiayiliu.github.com/posts/pocketflow-intro/#Steps-to-build-a-training/compression-pipeline"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Clone the repo&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone git@github.com:Tencent/PocketFlow.git
 &lt;span class="nb"&gt;cd&lt;/span&gt; PocketFlow
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From now on, the working directory is the repo folder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set up data input pipeline&lt;/p&gt;
&lt;p&gt;a. Create &lt;code&gt;path.conf&lt;/code&gt;, a template is at &lt;code&gt;./path.conf.template&lt;/code&gt;.  This file specifies the data path as &lt;code&gt;data_dir_local_&amp;lt;dataset&amp;gt; = ...&lt;/code&gt;.  The name &lt;code&gt;&amp;lt;dataset&amp;gt;&lt;/code&gt; is important, and will be used in below.&lt;/p&gt;
&lt;p&gt;b. Create &lt;code&gt;Dataset&lt;/code&gt; class for your data at &lt;code&gt;./datasets/&amp;lt;your dataset classe&amp;gt;.py&lt;/code&gt;.  The name of the class and the file name are not important, you will get the file path as &lt;code&gt;FLAGS.data_dir_local&lt;/code&gt; without the &lt;code&gt;&amp;lt;dataset&amp;gt;&lt;/code&gt; name here.  Importantly, you need inherate the &lt;code&gt;AbstractDataset&lt;/code&gt; and define the following functions and properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;batch_size&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dataset_fn&lt;/code&gt;: to create a tf Dataset object.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parse_fn&lt;/code&gt;: to parse the dataset, and need to accept an argument &lt;code&gt;is_train&lt;/code&gt; to differentiate training and testing pipelines.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create your model&lt;/p&gt;
&lt;p&gt;a. Create &lt;code&gt;&amp;lt;model&amp;gt;_at_&amp;lt;dataset&amp;gt;.py&lt;/code&gt;.  It is important to use the same &lt;code&gt;&amp;lt;dataset&amp;gt;&lt;/code&gt; as used in step 1.  Defining &lt;code&gt;ModelHelper&lt;/code&gt; class is critical.  Basically using existing code as a template is a good start.  For the minimum, you need to define your model in &lt;code&gt;forward_fn&lt;/code&gt; and replace the &lt;code&gt;dataset&lt;/code&gt; class with yours defined above.&lt;/p&gt;
&lt;p&gt;b. Create &lt;code&gt;&amp;lt;model&amp;gt;_at_&amp;lt;dataset&amp;gt;_run.py&lt;/code&gt;.  It is important to use the same &lt;code&gt;&amp;lt;dataset&amp;gt;&lt;/code&gt; as used in step 1.  In this file, basically you only need to replace the &lt;code&gt;ModelHelper&lt;/code&gt; function from the file you defined.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="Training-and-compression"&gt;Training and compression&lt;a class="anchor-link" href="https://jiayiliu.github.com/posts/pocketflow-intro/#Training-and-compression"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;It is highly recommended to use &lt;code&gt;./script/run_local.sh nets/&amp;lt;model&amp;gt;_at_&amp;lt;dataset&amp;gt;_run.py&lt;/code&gt; first to test your code and make sure PocketFlow can train it with full precision.&lt;/li&gt;
&lt;li&gt;The compression algorithms are under the name &lt;code&gt;learner&lt;/code&gt;.  Find more information from the &lt;a href="https://pocketflow.github.io/tutorial/"&gt;official documentation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The optional arguments can be provided after the above running script.  Unfortunately the arguments are defined spreading the whole source codes with &lt;a href="https://abseil.io/docs/python/guides/flags"&gt;FLAGS&lt;/a&gt;.  Stay tuned, I will provide further guidance next time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="Fix-version-issues-with-Docker"&gt;Fix version issues with Docker&lt;a class="anchor-link" href="https://jiayiliu.github.com/posts/pocketflow-intro/#Fix-version-issues-with-Docker"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Unfortunately the PocketFlow has compatability issues with Tensorflow newer versions.  To be on the safe side, use &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;.  I will create a brief overview of the solution:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a &lt;code&gt;./Dockerfile&lt;/code&gt; as below
```
FROM tensorflow/tensorflow:1.10-gpu-py3&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;WORKDIR /tf
ADD * /tf/   # this is the PocketFlow folder
RUN pip install -r requirement.txt&lt;/p&gt;
&lt;p&gt;VOLUME /output  # to save outputs, change your code / flags accordingly
VOLUME /data    # input path, don't put your data in the working folder.&lt;/p&gt;
&lt;p&gt;CMD ./script/run_local.sh nets/&lt;model&gt;&lt;em&gt;at&lt;/em&gt;&lt;dataset&gt;_run.py &lt;additional flags&gt; ...
```&lt;/additional&gt;&lt;/dataset&gt;&lt;/model&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Build the docker as &lt;code&gt;docker build -t &amp;lt;your image name&amp;gt; .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To run your docker with &lt;code&gt;bash&lt;/code&gt;, run &lt;code&gt;docker run --gpus 0 --rm -it -v &amp;lt;your data folder&amp;gt;:/data -v &amp;lt;your output folder&amp;gt;:/output &amp;lt;your image name&amp;gt; bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To run your training script (indicated by &lt;code&gt;CMD&lt;/code&gt; in the &lt;code&gt;Dockerfile&lt;/code&gt;, use &lt;code&gt;docker run --gpus 0 --rm -v &amp;lt;your data folder&amp;gt;:/data -v &amp;lt;your output folder&amp;gt;:/output &amp;lt;your image name&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>pocketflow</category><category>tensorflow</category><category>tutorial</category><guid>https://jiayiliu.github.com/posts/pocketflow-intro/</guid><pubDate>Sat, 14 Dec 2019 08:20:00 GMT</pubDate></item></channel></rss>